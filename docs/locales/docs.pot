# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025 ZiYueCommentary
# This file is distributed under the same license as the ZiYue4D package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ZiYue4D 0.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-21 22:00+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../basic-data-types.rst:2
msgid "Basic Data Types"
msgstr ""

#: ../../basic-data-types.rst:4
msgid "There are 4 basic data types:"
msgstr ""

#: ../../basic-data-types.rst:6
msgid "**Integer** are numeric values with no fractional part in them. For example: 5,-10,0 are integer values. All integer values in your program must be in the range -2147483648 to +2147483647."
msgstr ""

#: ../../basic-data-types.rst:8
msgid "**Float** are numeric values that include a fractional part. For example: .5, -10.1, 0.0 are all floating point values."
msgstr ""

#: ../../basic-data-types.rst:10
msgid "**String** are used to contain text. For example: \"Hello World!\"."
msgstr ""

#: ../../basic-data-types.rst:12
msgid "**Pointer** are objects that store a memory address. This type is for solving that pointers are stored in an integer in BlitzBasic."
msgstr ""

#: ../../basic-data-types.rst:15
msgid "Implicit conversion"
msgstr ""

#: ../../basic-data-types.rst:17
msgid "**Implicit conversion** plays an important role in ZiYue4D. Most of the conversion in ZiYue4D is implicit, and observes the same rules as in BlitzBasic."
msgstr ""

#: ../../basic-data-types.rst:19
msgid "When an binary operation involves two different data types, ZiYue4D will automatically convert one of the operands to the other type. The conversion rules are as follows:"
msgstr ""

#: ../../basic-data-types.rst:21
msgid "Pointers cannot be converted to any other type, and no other type can be converted to pointers. [#f1]_"
msgstr ""

#: ../../basic-data-types.rst:22
msgid "If one operand is a string, the other is converted to a string."
msgstr ""

#: ../../basic-data-types.rst:23
msgid "If one operand is floating point, the other is converted to floating point."
msgstr ""

#: ../../basic-data-types.rst:24
msgid "Otherwise, both operands are integers."
msgstr ""

#: ../../basic-data-types.rst:27
msgid "From \\\\ To"
msgstr ""

#: ../../basic-data-types.rst:27
#: ../../basic-data-types.rst:29
msgid "Integer"
msgstr ""

#: ../../basic-data-types.rst:27
#: ../../basic-data-types.rst:31
msgid "Float"
msgstr ""

#: ../../basic-data-types.rst:27
#: ../../basic-data-types.rst:33
msgid "String"
msgstr ""

#: ../../basic-data-types.rst:27
#: ../../basic-data-types.rst:35
msgid "Pointer"
msgstr ""

#: ../../basic-data-types.rst:29
#: ../../basic-data-types.rst:31
#: ../../basic-data-types.rst:33
#: ../../basic-data-types.rst:35
msgid "✅"
msgstr ""

#: ../../basic-data-types.rst:29
#: ../../basic-data-types.rst:31
#: ../../basic-data-types.rst:33
#: ../../basic-data-types.rst:35
msgid "❌"
msgstr ""

#: ../../basic-data-types.rst:31
msgid "❗ [#f2]_"
msgstr ""

#: ../../basic-data-types.rst:35
msgid "❗ [#f3]_"
msgstr ""

#: ../../basic-data-types.rst:38
msgid "Footnotes"
msgstr ""

#: ../../basic-data-types.rst:39
msgid "When assigning a pointer to an integer variable, ZiYue4D will automatically raise the variable to pointer type."
msgstr ""

#: ../../basic-data-types.rst:40
msgid "Float to Integer will round to the nearest integer. This may lead to loss of accuracy."
msgstr ""

#: ../../basic-data-types.rst:41
msgid "Storing a pointer in an integer is deprecated BlitzBasic practice. ZiYue4D will raise the variable to pointer type automatically."
msgstr ""

#: ../../comments.rst:2
msgid "Comments"
msgstr ""

#: ../../comments.rst:4
msgid "You add comments to your programs using the ``;`` character. Everything following ``;`` until the end of the line will be ignored."
msgstr ""

#: ../../comments.rst:6
msgid "``/* */`` is also supported for block comments. Everything between ``/*`` and ``*/`` will be ignored, even if it spans multiple lines. Block comments do not nest."
msgstr ""

#: ../../index.rst:2
msgid "Welcome to ZiYue4D documentation!"
msgstr ""

#: ../../index.rst:4
msgid "**ZiYue4D** is a programming language that is powered by LLVM and is based on BlitzBasic."
msgstr ""

#: ../../index.rst:8
msgid "This project is under active development."
msgstr ""

#: ../../index.rst:11
msgid "Contents"
msgstr ""
